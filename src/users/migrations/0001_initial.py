# Generated by Django 4.2.7 on 2025-10-17 16:08

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('phone_number', models.CharField(blank=True, max_length=20)),
                ('company', models.CharField(blank=True, max_length=255)),
                ('job_title', models.CharField(blank=True, max_length=255)),
                ('timezone', models.CharField(default='UTC', max_length=50)),
                ('language', models.CharField(default='en', max_length=10)),
                ('is_verified', models.BooleanField(default=False)),
                ('verification_token', models.CharField(blank=True, max_length=255)),
                ('verification_expires_at', models.DateTimeField(blank=True, null=True)),
                ('last_login_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('last_activity', models.DateTimeField(blank=True, null=True)),
                ('api_key', models.CharField(blank=True, max_length=255, unique=True)),
                ('api_quota_daily', models.IntegerField(default=1000)),
                ('api_quota_monthly', models.IntegerField(default=30000)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'users_user',
                'ordering': ['-date_joined'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('bio', models.TextField(blank=True)),
                ('skills', models.JSONField(default=list)),
                ('experience_years', models.IntegerField(blank=True, null=True)),
                ('education', models.JSONField(default=list)),
                ('certifications', models.JSONField(default=list)),
                ('notification_preferences', models.JSONField(default=dict)),
                ('privacy_settings', models.JSONField(default=dict)),
                ('profile_completion_percentage', models.IntegerField(default=0)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'users_user_profile',
            },
        ),
        migrations.CreateModel(
            name='UserSession',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('session_token', models.CharField(max_length=255, unique=True)),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField()),
                ('device_info', models.JSONField(default=dict)),
                ('is_active', models.BooleanField(default=True)),
                ('expires_at', models.DateTimeField()),
                ('last_activity', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'users_user_session',
                'ordering': ['-last_activity'],
                'indexes': [models.Index(fields=['user', 'is_active'], name='users_user__user_id_1c146b_idx'), models.Index(fields=['session_token'], name='users_user__session_e995ea_idx'), models.Index(fields=['expires_at'], name='users_user__expires_5c717e_idx')],
            },
        ),
        migrations.CreateModel(
            name='UserQuota',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('quota_type', models.CharField(choices=[('api_calls_daily', 'Daily API Calls'), ('api_calls_monthly', 'Monthly API Calls'), ('file_uploads_daily', 'Daily File Uploads'), ('evaluations_daily', 'Daily Evaluations'), ('storage_mb', 'Storage (MB)')], max_length=50)),
                ('limit', models.IntegerField()),
                ('used', models.IntegerField(default=0)),
                ('period_start', models.DateTimeField()),
                ('period_end', models.DateTimeField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quotas', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'users_user_quota',
                'ordering': ['-period_start'],
                'indexes': [models.Index(fields=['user', 'quota_type', 'period_start'], name='users_user__user_id_d70fa2_idx'), models.Index(fields=['quota_type', 'period_start'], name='users_user__quota_t_0bf28c_idx')],
                'unique_together': {('user', 'quota_type', 'period_start')},
            },
        ),
        migrations.CreateModel(
            name='UserPermission',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('permission_type', models.CharField(choices=[('api_access', 'API Access'), ('admin_panel', 'Admin Panel'), ('user_management', 'User Management'), ('system_config', 'System Configuration'), ('analytics', 'Analytics Access'), ('bulk_operations', 'Bulk Operations')], max_length=50)),
                ('is_granted', models.BooleanField(default=True)),
                ('granted_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('context', models.JSONField(default=dict)),
                ('granted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='granted_permissions', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='permissions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'users_user_permission',
                'ordering': ['-granted_at'],
                'indexes': [models.Index(fields=['user', 'permission_type'], name='users_user__user_id_d6f963_idx'), models.Index(fields=['permission_type', 'is_granted'], name='users_user__permiss_ad1d42_idx')],
                'unique_together': {('user', 'permission_type')},
            },
        ),
        migrations.CreateModel(
            name='UserActivity',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('activity_type', models.CharField(choices=[('login', 'Login'), ('logout', 'Logout'), ('api_call', 'API Call'), ('file_upload', 'File Upload'), ('evaluation_request', 'Evaluation Request'), ('profile_update', 'Profile Update'), ('password_change', 'Password Change')], max_length=50)),
                ('description', models.TextField()),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('metadata', models.JSONField(default=dict)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activities', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'users_user_activity',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['user', 'activity_type', 'created_at'], name='users_user__user_id_00f1e8_idx'), models.Index(fields=['activity_type', 'created_at'], name='users_user__activit_fe452d_idx')],
            },
        ),
    ]
