# Generated by Django 4.2.7 on 2025-10-17 16:09

from django.db import migrations, models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='EvaluationTemplate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('template_type', models.CharField(choices=[('cv_evaluation', 'CV Evaluation'), ('project_evaluation', 'Project Evaluation'), ('combined_evaluation', 'Combined Evaluation')], max_length=50)),
                ('prompts', models.JSONField(default=dict, help_text='LLM prompts for this template')),
                ('scoring_criteria', models.JSONField(default=dict, help_text='Scoring criteria and weights')),
                ('evaluation_config', models.JSONField(default=dict, help_text='Evaluation configuration')),
                ('is_active', models.BooleanField(default=True)),
                ('is_default', models.BooleanField(default=False)),
                ('version', models.CharField(default='1.0', max_length=20)),
                ('usage_count', models.IntegerField(default=0)),
                ('last_used', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'evaluation_evaluation_template',
                'ordering': ['name'],
                'indexes': [models.Index(fields=['template_type', 'is_active'], name='evaluation__templat_73c219_idx'), models.Index(fields=['is_default'], name='evaluation__is_defa_363bd2_idx')],
            },
        ),
        migrations.CreateModel(
            name='EvaluationResult',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('job_id', models.UUIDField(help_text='Reference to the evaluation job', unique=True)),
                ('cv_match_rate', models.FloatField(help_text='CV match rate (0.0 to 1.0)')),
                ('cv_feedback', models.TextField(help_text='Detailed CV feedback')),
                ('cv_detailed_scores', models.JSONField(default=dict, help_text='Detailed CV scoring breakdown')),
                ('project_score', models.FloatField(help_text='Project score (1.0 to 5.0)')),
                ('project_feedback', models.TextField(help_text='Detailed project feedback')),
                ('project_detailed_scores', models.JSONField(default=dict, help_text='Detailed project scoring breakdown')),
                ('overall_summary', models.TextField(help_text='Overall evaluation summary')),
                ('overall_score', models.FloatField(blank=True, help_text='Combined overall score', null=True)),
                ('evaluation_version', models.CharField(default='1.0', max_length=20)),
                ('evaluation_config', models.JSONField(default=dict, help_text='Configuration used for evaluation')),
                ('processing_time_seconds', models.FloatField(blank=True, null=True)),
                ('llm_model_used', models.CharField(blank=True, max_length=100)),
                ('rag_system_used', models.CharField(default='chromadb', max_length=50)),
            ],
            options={
                'db_table': 'evaluation_evaluation_result',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['job_id'], name='evaluation__job_id_b63d04_idx'), models.Index(fields=['cv_match_rate'], name='evaluation__cv_matc_7acba8_idx'), models.Index(fields=['project_score'], name='evaluation__project_c033ff_idx'), models.Index(fields=['overall_score'], name='evaluation__overall_cf3d66_idx')],
            },
        ),
        migrations.CreateModel(
            name='EvaluationMetric',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('metric_type', models.CharField(choices=[('accuracy', 'Accuracy'), ('precision', 'Precision'), ('recall', 'Recall'), ('f1_score', 'F1 Score'), ('processing_time', 'Processing Time'), ('user_satisfaction', 'User Satisfaction')], max_length=50)),
                ('metric_name', models.CharField(max_length=255)),
                ('value', models.FloatField()),
                ('evaluation_template_id', models.UUIDField(blank=True, null=True)),
                ('job_id', models.UUIDField(blank=True, null=True)),
                ('user_id', models.UUIDField(blank=True, null=True)),
                ('metadata', models.JSONField(default=dict)),
            ],
            options={
                'db_table': 'evaluation_evaluation_metric',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['metric_type', 'created_at'], name='evaluation__metric__98f945_idx'), models.Index(fields=['evaluation_template_id'], name='evaluation__evaluat_fb4c9e_idx')],
            },
        ),
        migrations.CreateModel(
            name='EvaluationFeedback',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('evaluation_result_id', models.UUIDField()),
                ('user_id', models.UUIDField()),
                ('feedback_type', models.CharField(choices=[('accuracy', 'Accuracy Feedback'), ('usefulness', 'Usefulness Feedback'), ('clarity', 'Clarity Feedback'), ('completeness', 'Completeness Feedback')], max_length=50)),
                ('rating', models.IntegerField(choices=[(1, 'Very Poor'), (2, 'Poor'), (3, 'Average'), (4, 'Good'), (5, 'Excellent')])),
                ('comment', models.TextField(blank=True)),
                ('context', models.JSONField(default=dict)),
            ],
            options={
                'db_table': 'evaluation_evaluation_feedback',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['evaluation_result_id'], name='evaluation__evaluat_ab8348_idx'), models.Index(fields=['user_id', 'feedback_type'], name='evaluation__user_id_f9df64_idx'), models.Index(fields=['rating'], name='evaluation__rating_4bdd3e_idx')],
            },
        ),
        migrations.CreateModel(
            name='EvaluationBatch',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('template_id', models.UUIDField(blank=True, null=True)),
                ('batch_config', models.JSONField(default=dict)),
                ('total_jobs', models.IntegerField(default=0)),
                ('completed_jobs', models.IntegerField(default=0)),
                ('failed_jobs', models.IntegerField(default=0)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('batch_results', models.JSONField(default=dict)),
            ],
            options={
                'db_table': 'evaluation_evaluation_batch',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['status', 'created_at'], name='evaluation__status_496b24_idx')],
            },
        ),
    ]
