# Generated by Django 4.2.7 on 2025-10-17 16:09

from django.db import migrations, models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='JobQueue',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('queue_type', models.CharField(choices=[('evaluation', 'Evaluation Queue'), ('notification', 'Notification Queue'), ('cleanup', 'Cleanup Queue'), ('reporting', 'Reporting Queue')], max_length=50)),
                ('description', models.TextField(blank=True)),
                ('max_workers', models.IntegerField(default=4)),
                ('max_queue_size', models.IntegerField(default=1000)),
                ('is_active', models.BooleanField(default=True)),
                ('current_size', models.IntegerField(default=0)),
                ('total_processed', models.IntegerField(default=0)),
                ('total_failed', models.IntegerField(default=0)),
                ('config', models.JSONField(default=dict)),
            ],
            options={
                'db_table': 'jobs_job_queue',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='JobWorker',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('worker_id', models.CharField(max_length=100, unique=True)),
                ('worker_name', models.CharField(max_length=255)),
                ('status', models.CharField(choices=[('idle', 'Idle'), ('busy', 'Busy'), ('offline', 'Offline'), ('error', 'Error')], default='idle', max_length=20)),
                ('hostname', models.CharField(max_length=255)),
                ('ip_address', models.GenericIPAddressField()),
                ('process_id', models.IntegerField()),
                ('current_job_id', models.UUIDField(blank=True, null=True)),
                ('current_job_started_at', models.DateTimeField(blank=True, null=True)),
                ('jobs_processed', models.IntegerField(default=0)),
                ('jobs_failed', models.IntegerField(default=0)),
                ('last_heartbeat', models.DateTimeField(auto_now=True)),
                ('config', models.JSONField(default=dict)),
            ],
            options={
                'db_table': 'jobs_job_worker',
                'ordering': ['-last_heartbeat'],
                'indexes': [models.Index(fields=['status', 'last_heartbeat'], name='jobs_job_wo_status_6a3734_idx'), models.Index(fields=['worker_id'], name='jobs_job_wo_worker__a24b29_idx')],
            },
        ),
        migrations.CreateModel(
            name='JobSchedule',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('schedule_type', models.CharField(choices=[('once', 'Run Once'), ('interval', 'Interval'), ('cron', 'Cron Expression')], max_length=20)),
                ('schedule_config', models.JSONField(default=dict)),
                ('job_config', models.JSONField(default=dict)),
                ('is_active', models.BooleanField(default=True)),
                ('last_run', models.DateTimeField(blank=True, null=True)),
                ('next_run', models.DateTimeField(blank=True, null=True)),
                ('total_runs', models.IntegerField(default=0)),
                ('successful_runs', models.IntegerField(default=0)),
                ('failed_runs', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'jobs_job_schedule',
                'ordering': ['name'],
                'indexes': [models.Index(fields=['is_active', 'next_run'], name='jobs_job_sc_is_acti_428577_idx')],
            },
        ),
        migrations.CreateModel(
            name='EvaluationJob',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('job_title', models.CharField(max_length=255)),
                ('job_type', models.CharField(default='cv_evaluation', max_length=50)),
                ('cv_document_id', models.UUIDField()),
                ('project_document_id', models.UUIDField()),
                ('status', models.CharField(choices=[('queued', 'Queued'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='queued', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('normal', 'Normal'), ('high', 'High'), ('urgent', 'Urgent')], default='normal', max_length=10)),
                ('queued_at', models.DateTimeField(auto_now_add=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('user_id', models.UUIDField(blank=True, null=True)),
                ('request_id', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('config', models.JSONField(default=dict, help_text='Job-specific configuration')),
                ('error_message', models.TextField(blank=True, null=True)),
                ('retry_count', models.IntegerField(default=0)),
                ('max_retries', models.IntegerField(default=3)),
                ('result_id', models.UUIDField(blank=True, null=True)),
            ],
            options={
                'db_table': 'jobs_evaluation_job',
                'ordering': ['-queued_at'],
                'indexes': [models.Index(fields=['status', 'queued_at'], name='jobs_evalua_status_04fd11_idx'), models.Index(fields=['user_id', 'queued_at'], name='jobs_evalua_user_id_3ace80_idx'), models.Index(fields=['priority', 'status'], name='jobs_evalua_priorit_f25507_idx')],
            },
        ),
    ]
